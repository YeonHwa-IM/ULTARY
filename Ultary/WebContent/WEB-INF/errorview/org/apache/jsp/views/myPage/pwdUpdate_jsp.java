/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-04-22 12:19:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.myPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class pwdUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

	Member loginUser = (Member)session.getAttribute("loginUser");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>비밀번호 변경</title>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/myPage_css/pwdUpdate.css\">\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("  \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <script src=\"http://code.jquery.com/jquery-latest.min.js\" type=\"text/javascript\"></script>\n");
      out.write("    <script src=\"script.js\"></script>\n");
      out.write("    <style>\n");
      out.write(".text{font-family: 'Nanum Gothic Coding', monospace;}\n");
      out.write("\n");
      out.write("\t#mypage{\n");
      out.write("\t\twidth:900px;\n");
      out.write("\t\theight:1500px;\n");
      out.write("\t\ttable-layout: fixed;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t#title{\n");
      out.write("    font-size: 25px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\t\t#myForm{border: 1px solid hsla(197, 62%, 74%, 0.603);\n");
      out.write("   \t\t\t\tborder-width: 20px;\n");
      out.write("    \t\t\tbackground: white;\n");
      out.write("    \t\t\tmargin: 20px\n");
      out.write("    \t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t#retoch{\n");
      out.write("\t\twidth: 140px;\n");
      out.write("\t\tbox-shadow: 0px 1px 0px 0px #f0f7fa;\n");
      out.write("\t\tbackground:linear-gradient(to bottom, #33bdef 5%, #019ad2 100%);\n");
      out.write("\t\tbackground-color:#33bdef;\n");
      out.write("\t\tborder-radius:6px;\n");
      out.write("\t\tborder:1px solid #057fd0;\n");
      out.write("\t\tdisplay:inline-block;\n");
      out.write("\t\tcursor:pointer;\n");
      out.write("\t\tcolor:#ffffff;\n");
      out.write("\t\tfont-family:Arial;\n");
      out.write("\t\tfont-size:18px;\n");
      out.write("\t\tfont-weight:bold;\n");
      out.write("\t\tpadding:6px 24px;\n");
      out.write("\t\ttext-decoration:none;\n");
      out.write("\t\ttext-shadow:0px -1px 0px #5b6178;\n");
      out.write("\t\t}\n");
      out.write("\t\t#retoch:hover{\n");
      out.write("\t\tbackground:linear-gradient(to bottom, #019ad2 5%, #33bdef 100%);\n");
      out.write("\t\tbackground-color:#019ad2;\n");
      out.write("\t\t}\n");
      out.write("\t\t#retoch:active {\n");
      out.write("\t\tposition:relative;\n");
      out.write("\t\ttop:1px;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\ttable {margin-left: auto; margin-right: auto;\n");
      out.write(" \t \t\t   border-spacing: 35px;\n");
      out.write(" \t\t   \t   border-collapse: separate;\n");
      out.write(" \t\t    \n");
      out.write("}\n");
      out.write("\t\tth{background: hsla(197, 62%, 74%, 0.603); width: 140px; text-align: center;}\n");
      out.write("\t\ttd{text-align: center;}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div id=\"all\">\n");
      out.write("\t\t<div id=\"all-wrap\">\n");
      out.write("\t\t\t<header>\n");
      out.write("\t\t\t\t<div id=\"header-top\">\n");
      out.write("\t\t\t\t\t<img class=\"headerimg\" src=\"");
      out.print( request.getContextPath() );
      out.write("/image/알림.png\">\n");
      out.write("\t\t\t\t\t<img class=\"headerimg\" src=\"");
      out.print( request.getContextPath() );
      out.write("/image/메신저.png\">\n");
      out.write("\t\t\t\t\t<div id=\"header-topR\">\n");
      out.write("\t\t\t\t\t\t<div id=\"nick\">");
      out.print( loginUser.getNickname() );
      out.write("</div>\n");
      out.write("\t\t\t\t\t\t<div id=\"nim\">님</div>\n");
      out.write("\t\t\t\t\t\t<button id=\"logout\" class=\"top-right\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/logout.me'\">로그아웃</button>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div id=\"header-bottom\">\n");
      out.write("\t\t\t\t\t<img id=\"logoimg\" src=\"");
      out.print( request.getContextPath() );
      out.write("/image/logo.png\" type=\"onclick\" style='cursor:pointer;'>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</header>\n");
      out.write("\t\t\t<nav>\n");
      out.write("\t\t\t\t<div id='cssmenu'>\n");
      out.write("\t\t\t\t\t <ul>\n");
      out.write("                  <li>\n");
      out.write("                     <a href='#'>내울타리</a>\n");
      out.write("                     <ul id=\"menu1\">\n");
      out.write("                        <li><a href='#'>타임라인</a></li>\n");
      out.write("                        <li><a href='#'>게시글작성</a></li>\n");
      out.write("                        <li><a href='#'>관심회원</a></li>\n");
      out.write("                        <li><a href='#'>게시글 즐겨찾기</a></li>\n");
      out.write("                        <li><a href='#'>내 위탁환경</a></li>\n");
      out.write("                     </ul>\n");
      out.write("                  </li>\n");
      out.write("                  <li>\n");
      out.write("                     <a href='#'>커뮤니티</a>\n");
      out.write("                     <ul id=\"menu2\">\n");
      out.write("                        <li><a href='#'>공지사항</a></li>\n");
      out.write("                        <li><a href='#'>모아보기</a></li>\n");
      out.write("                        <li><a href='#'>펫일상</a></li>\n");
      out.write("                        <li><a href='#'>펫지식</a></li>\n");
      out.write("                        <li><a href='#'>펫리뷰</a></li>\n");
      out.write("                        <li><a href='#'>펫분양</a></li>\n");
      out.write("                     </ul>\n");
      out.write("                  </li>\n");
      out.write("                  <li><a href='#'>위탁매칭</a>\n");
      out.write("                     <ul id=\"menu3\">\n");
      out.write("                        <li><a href='#'>위탁검색</a></li>\n");
      out.write("                        <li><a href='#'>의뢰 관리</a></li>\n");
      out.write("                        <li><a href='#'>내가 남긴 리뷰</a></li>\n");
      out.write("                     </ul>\n");
      out.write("                  </li>\n");
      out.write("                  <li class='active'>\n");
      out.write("                 \t <a href='#'>마이페이지</a>\n");
      out.write("                     <ul id=\"menu4\">\n");
      out.write("                       <li><a href=\"");
      out.print( request.getContextPath() );
      out.write("/views/myPage/memberUpdate.jsp\">내 정보 관리</a></li>\n");
      out.write("\t\t\t\t\t   <li><a href=\"");
      out.print( request.getContextPath() );
      out.write("/views/myPage/pwdUpdate.jsp\">비밀번호 변경</a></li>\n");
      out.write("\t\t\t\t\t   <li><a href=\"");
      out.print( request.getContextPath() );
      out.write("/views/myPage/memberDelete.jsp\">회원 탈퇴</a></li>\n");
      out.write("                     </ul>\n");
      out.write("                  </li>\n");
      out.write("                  <li><a href='#'>고객센터</a>\n");
      out.write("                     <ul id=\"menu5\">\n");
      out.write("                        <li><a href='#'>공지 사항</a></li>\n");
      out.write("                        <li><a href='#'>자주하는 질문</a></li>\n");
      out.write("                        <li><a href='#'>1:1 문의</a></li>\n");
      out.write("                     </ul>\n");
      out.write("                  </li>\n");
      out.write("               </ul>\n");
      out.write("            </div>\n");
      out.write("\t\t\t</nav>\n");
      out.write("\t\t\t<div id=\"asidesection\">\n");
      out.write("\t\t\t\t<aside>\n");
      out.write("\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t<li>내 정보 관리</li>\n");
      out.write("\t\t\t\t\t\t<li>비밀번호 변경</li>\n");
      out.write("\t\t\t\t\t\t<li>회원 탈퇴</li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</aside>\n");
      out.write("\t\t\t\t<section>\n");
      out.write("\t\t\t\t<body>\n");
      out.write("\t<div id=\"mypage\">\n");
      out.write("\t    <div>\n");
      out.write("            <form id=\"myForm\" action=\"");
      out.print( request.getContextPath() );
      out.write("/pwdupdate.mem\" method=\"post\">\n");
      out.write("\t<table>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>현재 비밀번호</th>\n");
      out.write("\t\t\t<td>\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\">\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td align=\"left\"><label id=\"pwdcheck\"></label></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>새 비밀번호</th>\n");
      out.write("\t\t\t<td>\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"passwordN\" id=\"passwordN\" placeholder=\"최소 7자 이상\">\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td align=\"left\"><label id=\"pwdcheck1\"></label></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>새 비밀번호 확인</th>\n");
      out.write("\t\t\t<td><input type=\"password\" name=\"passwordNC\" id=\"passwordNC\"></td>\n");
      out.write("\t\t\t<td align=\"left\"><label id=\"pwdcheck2\"></label></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\t\t<center><input type=\"submit\" id=\"retoch\" value=\"변경하기\" onclick=\"return test()\" style='cursor:pointer;'></center><br>\n");
      out.write("\t\t\n");
      out.write("    </form>\n");
      out.write("   </div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("\t\t\t\t</section>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<footer>from.hoseong</footer>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<script>\n");
      out.write("\t\t\t\t var pwdcheckUsable = false;    // 비번 중복 시false, 사용가능시 true\n");
      out.write("\t\t\t     var pwdcheckChecked = false;   // 비번 중복확인을 했는지 안했는지 검사\n");
      out.write("\t\t\t     var newpwdcheck = false; // 새 비밀번호와 새 비밀번호 확인이 일치 하는지 검사\n");
      out.write("\t\t\t     var testnewpwd = false; // 새 비밀번호 정규식 검사 여부\n");
      out.write("\t\t\t     var re =/^[a-zA-Z\\d]{7,11}$/;  // 비번 정규식\t\n");
      out.write("\t\t\t    \t \n");
      out.write("\t\t\t      \t$('#password').val('');\n");
      out.write("\t\t\t     \t$('#password').focus();\n");
      out.write("\t\t\t\t\t$('#password').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("\t\t\t\t\t\tpwdcheck = false;\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t    \n");
      out.write("\t\t\t\t\t//기존비번과 현재비번이 일치하는지 확인\n");
      out.write("\t\t\t     \t$('#password').keyup(function(){\n");
      out.write("\t\t\t     \t\tvar password = $('#password');\n");
      out.write("\t\t\t     \t\tvar oldPwd = '");
      out.print( loginUser.getPassword() );
      out.write("';\n");
      out.write("\t\t\t     \t\t\n");
      out.write("\t\t\t     \t\tif(password.val() == oldPwd){\n");
      out.write("\t\t\t     \t\t\t$('#pwdcheck').text('현재 비밀번호와 일치합니다');\n");
      out.write("\t\t\t            \t $('#pwdcheck').css({'color':'green', 'float':'right','display':'inline-block','padding-right':'10px'});\n");
      out.write("\t\t\t            \t pwdcheckUsable = true;\n");
      out.write("\t\t                     pwdcheckChecked= true;\n");
      out.write("\t\t\t     \t\t}else{\n");
      out.write("\t\t\t     \t\t\t $('#pwdcheck').text('현재 비밀번호가 아닙니다');\n");
      out.write("\t\t\t                 $('#pwdcheck').css({'color':'red', 'float':'right','display':'inline-block', 'padding-right':'10px'});\n");
      out.write("\t\t\t                 pwdcheckUsable = false;\n");
      out.write("\t\t\t                 pwdcheckChecked= false;\n");
      out.write("\t\t\t     \t\t}\n");
      out.write("\t\t\t        });\n");
      out.write("\t\t\t     \t\n");
      out.write("\t\t\t\t\t//새비번을 받아서 정규식확인, 정규식이 맞으면 디비에 보내서 저장\n");
      out.write("\t\t\t\t\t//새로 새비번, 비번확인 맞는지 확인\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t//패스워드 1과 패스워트 2 동일한지 검사.\n");
      out.write("\t\t\t\t    $('#passwordNC').keyup(function(){\n");
      out.write("\t\t\t\t    \tvar passwordN = $('#passwordN');\n");
      out.write("\t\t\t\t\t\tvar passwordNC = $('#passwordNC');\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t       if(passwordN.val() == passwordNC.val()){\n");
      out.write("\t\t\t\t          $('#pwdcheck2').text('비밀번호가 일치합니다');\n");
      out.write("\t\t\t\t          $('#pwdcheck2').css({'color':'green', 'float':'right','display':'inline-block','padding-right':'50px'});\n");
      out.write("\t\t\t\t          newpwdcheck = true;\n");
      out.write("\t\t\t\t       }else{\n");
      out.write("\t\t\t\t          $('#pwdcheck2').text('비밀번호가 일치하지 않습니다');\n");
      out.write("\t\t\t\t          $('#pwdcheck2').css({'color':'red', 'float':'right','display':'inline-block', 'padding-right':'50px'});\n");
      out.write("\t\t\t\t          newpwdcheck = false;\n");
      out.write("\t\t\t\t       }\n");
      out.write("\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// \n");
      out.write("\t\t\t\t\tfunction test() {\n");
      out.write("\t\t\t\t\t\tif(pwdcheckUsable && pwdcheckChecked && newpwdcheck) {\n");
      out.write("\t\t\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\talert('다시 입력해주세요.');\n");
      out.write("\t\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t     \t//정규식을 이용한 에이작스\n");
      out.write("// \t\t\t     \t\tif(!re.test(password.val())){ \t\n");
      out.write("// \t\t\t     \t\tpassword.focus();\n");
      out.write("// \t\t\t     \t\t\t$.ajax({\n");
      out.write("\n");
      out.write("// \t\t\t                    data:{password: password.val()},\n");
      out.write("// \t\t\t                    success: function(data){ //data로 반환 받아옴      \n");
      out.write("// \t\t\t                    \tconsole.log(data);\n");
      out.write("// \t\t\t              if(data == \"success\"){\n");
      out.write("// \t\t\t                 $('#pwdcheck').text('현재 비밀번호와 일치합니다');\n");
      out.write("// \t\t\t            \t $('#pwdcheck').css({'color':'green', 'float':'right','display':'inline-block','padding-right':'10px'});\n");
      out.write("// \t\t\t            \t pwdcheckUsable = true;\n");
      out.write("// \t\t                     pwdcheckChecked= true;\n");
      out.write("// \t\t\t              }\telse {\n");
      out.write("// \t\t\t            \t $('#pwdcheck').text('현재 비밀번호가 아닙니다');\n");
      out.write("// \t\t\t                 $('#pwdcheck').css({'color':'red', 'float':'right','display':'inline-block', 'padding-right':'10px'});\n");
      out.write("// \t\t\t                 pwdcheckUsable = false;\n");
      out.write("// \t\t\t                 pwdcheckChecked= false;\n");
      out.write("// \t\t\t                 }\n");
      out.write("// \t\t\t              }\n");
      out.write("// \t\t\t           });\n");
      out.write("// \t\t\t        }\n");
      out.write("\t\t\t     \t\n");
      out.write("\t\t\t     \t\n");
      out.write("\n");
      out.write("\t\t\t\t</script>\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
